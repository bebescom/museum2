<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.museum.mapper.ConfigMapper">
    <resultMap id="BaseResultMap" type="com.museum.pojo.Config">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="key" jdbcType="VARCHAR" property="key"/>
        <result column="val" jdbcType="VARCHAR" property="val"/>
        <result column="group" jdbcType="VARCHAR" property="group"/>
        <result column="input_type" jdbcType="VARCHAR" property="inputType"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, `key`, val, `group`, input_type, sort
    </sql>

    <!-- 查询系统信息 -->
    <select id="findSysInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from config
        where `group` = 'system'
    </select>

    <!-- 获取城市名称以用于查询室外天气 -->
    <select id="findCityName" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        config
        WHERE
        `key` = 'city'
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from config
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from config
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.museum.pojo.Config">
        insert into config (id, key, val,
        group, input_type, sort
        )
        values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{val,jdbcType=VARCHAR},
        #{group,jdbcType=VARCHAR}, #{inputType,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.museum.pojo.Config">
        insert into config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="key != null">
                key,
            </if>
            <if test="val != null">
                val,
            </if>
            <if test="group != null">
                group,
            </if>
            <if test="inputType != null">
                input_type,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="key != null">
                #{key,jdbcType=VARCHAR},
            </if>
            <if test="val != null">
                #{val,jdbcType=VARCHAR},
            </if>
            <if test="group != null">
                #{group,jdbcType=VARCHAR},
            </if>
            <if test="inputType != null">
                #{inputType,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.museum.pojo.Config">
        update config
        <set>
            <if test="key != null">
                key = #{key,jdbcType=VARCHAR},
            </if>
            <if test="val != null">
                val = #{val,jdbcType=VARCHAR},
            </if>
            <if test="group != null">
                group = #{group,jdbcType=VARCHAR},
            </if>
            <if test="inputType != null">
                input_type = #{inputType,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.museum.pojo.Config">
        update config
        set key = #{key,jdbcType=VARCHAR},
        val = #{val,jdbcType=VARCHAR},
        group = #{group,jdbcType=VARCHAR},
        input_type = #{inputType,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>